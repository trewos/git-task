1) git reset & git revert
Щоб виконати цю задачу, спочатку я використав команду git revert <ssh-commit>, щоб скасувати зміни у вказаному коміті. 
Після виконання цієї команди створюється новий коміт, в якому відсутні зміни з коміту <ssh-commit>.

Для скидання коміту я використав команду git reset <ssh-commit>. Оскільки ця команда використовувалася без операторів, за замовчуванням вона використовує оператор --mixed. 
Цей оператор забезпечує те, що зміни з попереднього коміту, до якого було застосовано скидання, залишаються в індексі, але не в робочій директорії. 
Для підтвердження цього, я використав команду git restore Text, щоб відновити зміни, які були скасовані внаслідок скидання коміту.

Різниця між git revert та git reset полягає в тому, що git revert створює новий коміт, який відміняє зміни попереднього коміту, а git reset змінює історію комітів, скидаючи гілку на конкретний коміт.

2) git branch -D
Для видалення гілки на локальному середовищі було використано команду git branch -D deleted. Після цього гілка пропадає з локального середовища, але залишається в Github.

3) git rebase
Для використання команди git rebase було створено дві гілки з різними файлами. 
Для того, щоб перемістити файли з гілки doer на гілку dev спочатку потрібно виконати команду git checkout dev, а тоді git rebase doer. 
Після цього всі нові файли з гілки doer додадуться до гілки dev.

4) git cherry-pick
Для того, щоб виконати команду git cherry-pick використовував гілку doer для того, щоб скопіювати зміні на гілку master, оскільки там не було ніяких файлів з попередніх пунктів.
Спочатку через git log потрібно обрати коміт зміни з якого будуть перенесені на master. Після чого потрібно перейти на master та прописати команду git cherry-pick <ssh-commit>.

5) Конфлікти
Конфлікт виник при спробі взяти зміни з dev на doer. Для того, що вирішити цей конфлікт було використано команду git pull origin dev —no-rebase. 
Далі конфлікт було вирішено вручну зміною файлів, але це можна зробити бистріше через IDE, або, якщо подібні конфлікти зустрічались раніше, через конфігурацію rerere. Далі було зроблено коміт через git commit -m та виконано команду git pull origin dev.
